{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"present"},{"kind":"text","text":"("},{"kind":"externalParam","text":"child"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftLibsCoordination\/documentation\/SwiftLibsCoordination\/Coordinator","preciseIdentifier":"s:21SwiftLibsCoordination11CoordinatorP","text":"Coordinator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"animated"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onDismiss"},{"kind":"text","text":": (() -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")? = nil)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"child","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A child coordinator to be presented."}]}]},{"name":"animated","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A boolean that represents whether the coordinator should be dismissed animatedly or not."}]}]},{"name":"onDismiss","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure to be called or executed when the presented coordinator is dismissed."}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftlibscoordination\/coordinator\/present(child:animated:ondismiss:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftLibsCoordination\/documentation\/SwiftLibsCoordination\/Coordinator\/present(child:animated:onDismiss:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Present a child coordinator animatedly or not, depending on the given "},{"type":"codeVoice","code":"animated"},{"type":"text","text":" parameter, and also pass a closure that should be called on dismissal."}],"kind":"symbol","metadata":{"role":"symbol","title":"present(child:animated:onDismiss:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"present"},{"kind":"text","text":"("},{"kind":"externalParam","text":"child"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Coordinator","preciseIdentifier":"s:21SwiftLibsCoordination11CoordinatorP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"animated"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onDismiss"},{"kind":"text","text":": (() -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"symbolKind":"method","externalID":"s:21SwiftLibsCoordination11CoordinatorPAAE7present5child8animated9onDismissyAaB_p_SbyycSgtF","extendedModule":"SwiftLibsCoordination","modules":[{"name":"SwiftLibsCoordination"}]},"hierarchy":{"paths":[["doc:\/\/SwiftLibsCoordination\/documentation\/SwiftLibsCoordination","doc:\/\/SwiftLibsCoordination\/documentation\/SwiftLibsCoordination\/Coordinator"]]},"references":{"doc://SwiftLibsCoordination/documentation/SwiftLibsCoordination":{"role":"collection","title":"SwiftLibsCoordination","abstract":[],"identifier":"doc:\/\/SwiftLibsCoordination\/documentation\/SwiftLibsCoordination","kind":"symbol","type":"topic","url":"\/documentation\/swiftlibscoordination"},"doc://SwiftLibsCoordination/documentation/SwiftLibsCoordination/Coordinator":{"role":"symbol","title":"Coordinator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Coordinator"}],"abstract":[{"type":"text","text":"This protocol organize the flow logic between view controllers in the app."}],"identifier":"doc:\/\/SwiftLibsCoordination\/documentation\/SwiftLibsCoordination\/Coordinator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Coordinator"}],"url":"\/documentation\/swiftlibscoordination\/coordinator"},"doc://SwiftLibsCoordination/documentation/SwiftLibsCoordination/Coordinator/present(child:animated:onDismiss:)":{"role":"symbol","title":"present(child:animated:onDismiss:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"present"},{"kind":"text","text":"("},{"kind":"externalParam","text":"child"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Coordinator","preciseIdentifier":"s:21SwiftLibsCoordination11CoordinatorP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"animated"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onDismiss"},{"kind":"text","text":": (() -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"abstract":[{"type":"text","text":"Present a child coordinator animatedly or not, depending on the given "},{"type":"codeVoice","code":"animated"},{"type":"text","text":" parameter, and also pass a closure that should be called on dismissal."}],"identifier":"doc:\/\/SwiftLibsCoordination\/documentation\/SwiftLibsCoordination\/Coordinator\/present(child:animated:onDismiss:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftlibscoordination\/coordinator\/present(child:animated:ondismiss:)"}}}